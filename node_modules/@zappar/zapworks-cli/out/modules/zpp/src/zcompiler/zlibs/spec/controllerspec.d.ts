export interface ControllerSpec {
    readonly id: string;
    name: string;
    elements: ElementSpec[];
    default: string | undefined;
    scriptName?: string;
}
export interface ElementSpec {
    readonly id: string;
    name: string;
    type: string;
    overrides: {
        [id: string]: {
            [id: string]: any;
        };
    };
    scriptName?: string;
}
export interface ControllerValue {
    element: string;
    t?: number;
}
export interface TimelineSpec extends ElementSpec {
    fromState: string;
    toState: string;
    length: number;
    loop: boolean;
    actions: {
        [id: string]: TimelineActionSpec[];
    };
    labels: TimelineLabelSpec[];
    overrides: {
        [id: string]: {
            [id: string]: TimelineHandleSpec[];
        };
    };
}
export interface TimelineActionSpec {
    t: number;
    a: string;
    f: boolean;
    b: boolean;
}
export interface TimelineLabelSpec {
    t: number;
    n: string;
    scriptName: string;
}
export interface TimelineHandleSpec {
    t: number;
    v: any;
    i?: string;
    _i?: InterpolatorFunction;
    _tf?: TimeFunction;
}
export interface InterpolatorFunction {
    (time: number, length: number, startValue: any, endValue: any, timeFunc: (t: number) => number): any;
}
export interface TimeFunction {
    (tin: number): number;
}
export interface StateSpec extends ElementSpec {
    overrides: {
        [id: string]: {
            [id: string]: StateOverrideSpec;
        };
    };
}
export interface StateOverrideSpec {
    v: any;
    r: number;
    p: number;
}
export declare function ElementIsTimeline(e: ElementSpec | undefined): e is TimelineSpec;
export declare function ElementIsState(e: ElementSpec | undefined): e is StateSpec;
