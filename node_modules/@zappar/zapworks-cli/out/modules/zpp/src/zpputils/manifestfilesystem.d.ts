/// <reference types="node" />
import { IWriteFileSystem, IReadFileSystem } from "./ifilesystem";
export declare class ManifestFileSystemReader {
    private _source;
    constructor(source: IReadFileSystem);
    getCurrent(): Promise<IReadFileSystem>;
    getSnapshot(name: string): Promise<IReadFileSystem>;
}
export declare class ManifestFileSystemWriter {
    private _destination;
    constructor(destination: IWriteFileSystem);
    getCurrent(): SnapshotFileSystemWriter;
    getSnapshot(name: string): SnapshotFileSystemWriter;
}
export declare class SnapshotFileSystemWriter implements IWriteFileSystem {
    private _destination;
    private _manifest;
    private _snapshotName;
    constructor(destination: IWriteFileSystem, snapshotName: string);
    putFile(filename: string, contents: Buffer): Promise<void>;
    save(): Promise<void>;
}
